name: Cleanup Old Releases

on:
  schedule:
    # 每周一凌晨 1 点（UTC），北京时间周一早上 9 点
    - cron: "0 1 * * 1"

  workflow_dispatch:
    inputs:
      keep_days:
        description: "保留最近多少天（默认 2）"
        required: false
        default: "2"

jobs:
  cleanup_releases:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Cleanup old releases and tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KEEP_DAYS: ${{ github.event.inputs.keep_days }}
        run: |
          # 如果 KEEP_DAYS 为空，则默认 
          if [ -z "$KEEP_DAYS" ]; then
            KEEP_DAYS=
          fi

          THRESHOLD="$(date -u -d "${KEEP_DAYS} days ago" '+%Y-%m-%dT%H:%M:%SZ')"
          echo "Threshold time (UTC): $THRESHOLD"

          # 获取需要删除的 release ID
          RELEASE_IDS=$(gh api -X GET "repos/${GITHUB_REPOSITORY}/releases" \
                        --paginate -F per_page=100 \
                        --jq '.[] | select(.created_at < "'"$THRESHOLD"'") | .id')

          if [ -z "$RELEASE_IDS" ]; then
            echo "✅ No releases to delete"
            exit 0
          fi

          echo "Releases to delete: $(echo "$RELEASE_IDS" | wc -w)"

          for ID in $RELEASE_IDS; do
            # 获取 release 名称和 tag
            NAME=$(gh api -X GET "repos/${GITHUB_REPOSITORY}/releases/${ID}" --jq '.name')
            TAG_NAME=$(gh api -X GET "repos/${GITHUB_REPOSITORY}/releases/${ID}" --jq -r '.tag_name')

            echo "🗑 Deleting Release: $NAME (ID: $ID)"
            gh api -X DELETE "repos/${GITHUB_REPOSITORY}/releases/${ID}" || {
              echo "⚠️ Failed to delete Release: $ID (continue)"
            }

            # 删除对应 tag
            if [ "$TAG_NAME" != "null" ] && [ -n "$TAG_NAME" ]; then
              echo "🗑 Deleting Tag: $TAG_NAME"
              gh api -X DELETE "repos/${GITHUB_REPOSITORY}/git/refs/tags/$TAG_NAME" || {
                echo "⚠️ Failed to delete Tag: $TAG_NAME (continue)"
              }
            else
              echo "⚠️ Release $NAME has no tag, skipping tag deletion"
            fi

            sleep 0.5
          done

          echo "🎉 Cleanup complete"
