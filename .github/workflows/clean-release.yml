name: Cleanup Old Releases

on:
  schedule:
    # 每周一 01:00 UTC（北京时间周一 09:00）
    - cron: "0 1 * * 1"

  workflow_dispatch:
    inputs:
      keep_days:
        description: "保留最近多少天（默认 2）"
        required: false
        default: "2"

jobs:
  cleanup_releases:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Cleanup old releases and tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KEEP_DAYS: ${{ github.event.inputs.keep_days }}
        run: |
          set -euo pipefail
          export LANG=C.UTF-8
          export LC_ALL=C.UTF-8

          # 默认值与校验（定时触发时 inputs 为空，这里兜底）
          KEEP_DAYS="${KEEP_DAYS:-2}"
          if ! [[ "$KEEP_DAYS" =~ ^[0-9]+$ ]]; then
            echo "KEEP_DAYS is not a number, fallback to 2"
            KEEP_DAYS=2
          fi

          THRESHOLD="$(date -u -d "${KEEP_DAYS} days ago" '+%Y-%m-%dT%H:%M:%SZ')"
          echo "Threshold time (UTC): $THRESHOLD"

          # 一次性拉取所有超出阈值的 release 所需字段（id、name、tag_name）
          TO_DELETE="$(gh api --paginate "repos/${GITHUB_REPOSITORY}/releases" \
            --jq '.[] | select(.created_at < "'"$THRESHOLD"'") | [.id, (.name // ""), (.tag_name // "")] | @tsv' || true)"

          if [ -z "$TO_DELETE" ]; then
            echo "✅ No releases to delete"
            exit 0
          fi

          COUNT="$(printf '%s\n' "$TO_DELETE" | sed '/^$/d' | wc -l)"
          echo "Releases to delete: $COUNT"

          # 逐行读入：ID \t NAME \t TAG_NAME
          printf '%s\n' "$TO_DELETE" | while IFS=$'\t' read -r ID NAME TAG_NAME; do
            echo "🗑 Deleting Release: ${NAME:-<no name>} (ID: $ID)"
            gh api -X DELETE "repos/${GITHUB_REPOSITORY}/releases/${ID}" || {
              echo "⚠️ Failed to delete Release: $ID (continue)"; 
            }

            if [ -n "${TAG_NAME:-}" ] && [ "$TAG_NAME" != "null" ]; then
              echo "🗑 Deleting Tag: $TAG_NAME"
              gh api -X DELETE "repos/${GITHUB_REPOSITORY}/git/refs/tags/$TAG_NAME" || {
                echo "⚠️ Failed to delete Tag: $TAG_NAME (continue)";
              }
            else
              echo "⚠️ No tag for release ID $ID, skipping tag deletion"
            fi

            sleep 1
          done

          echo "🎉 Cleanup complete"
